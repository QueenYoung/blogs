webpackJsonp([0xfbb49da3ee22],{484:function(n,s){n.exports={data:{site:{siteMetadata:{title:"Yangkui's Blog",author:"Yang Kui"}},markdownRemark:{id:"/Users/yk/Documents/blog/src/pages/反转字符串/index.md absPath of file >>> MarkdownRemark",html:'<p>这个问题可能非常老，写过代码的都知道使用</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>但是，需要注意的是，因为 JS 默认使用的是 UCS-2 来编码的，对于中文支持也貌似没问题。可是到了 Unicode 环境下，大量的 emoji，就会出问题咯。</p>\n<p>\n就像上面显示的这样。那改怎么解决呢？\n在 ES6 之前，可能需要通过对 Unicode 内部编码的了解来特别规定某个范围改做什么。但是 ES6 支持了 <code>codePoint</code>，我们就不要这种复杂的方式了！\n</p>\n<p>简单粗暴。</p>',frontmatter:{title:"反转字符串",date:"2018/01/12"}}},pathContext:{slug:"/反转字符串/"}}}});
//# sourceMappingURL=path---反转字符串-72169d1710b297049c8a.js.map